# Docker Compose file Reference (https://docs.docker.com/compose/compose-file/)

version: '3.7'

# Define services
services:
  # App backend service
  merchant-server:
    # Configuration for building the docker image for the backend service
    build:
      context: merchant-server # Use an image built from the specified dockerfile in the `merchant-server` directory.
      dockerfile: Dockerfile
    ports:
      - "8080:8080" # Forward the exposed port 8080 on the container to port 8080 on the host machine
    restart: always
    depends_on: 
      - merchantdb # This service depends on mysql.
    environment: # Pass environment variables to the service
      SPRING_DATASOURCE_URL: jdbc:mysql://merchantdb:3306/merchant?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false
      SPRING_DATASOURCE_USERNAME: merchant
      SPRING_DATASOURCE_PASSWORD: merchant   
    networks: # Networks to join (Services on the same network can communicate with each other using their name)
      - backend
      - frontend

  # Frontend Service 
  merchant-client:
    build:
      context: merchant-client # Use an image built from the specified dockerfile in the `merchant-client` directory.
      dockerfile: Dockerfile
      args:
        REACT_APP_API_BASE_URL: http://127.0.0.1:8080/api
    ports:
      - "9090:80" # Forward the exposed port 80 on the container to port 80 on the host machine
    restart: always
    depends_on:
      - merchant-server
    networks:
      - frontend  

  # (Mysql) Database Service 
  merchantdb:
    image: mysql:8.0
    ports:
      - "3306:3306"
    restart: always
    environment:
      MYSQL_DATABASE: merchant
      MYSQL_USER: merchant
      MYSQL_PASSWORD: merchant
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - backend     
# Volumes
volumes:
  db-data:

# Networks to facilitate communication between containers
networks:
  backend:
  frontend: 